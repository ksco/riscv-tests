
# See LICENSE for license details.

# This file is automatically generated. Do not edit.

#*****************************************************************************
# vmsbf.m_LMUL1SEW16.S
#-----------------------------------------------------------------------------
#
# Test vmsbf.m insnructions.
# With LMUL=1, SEW=16
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

RVTEST_CODE_BEGIN


  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a2, tdat
  vle16.v v2, (a2)

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v1, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v3, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 8
  vsetvli t1, t0, e16,m1,ta,ma
  vmsbf.m v1, v2

  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a1, res
  vse16.v v1, (a1)

  TEST_CASE(2, t0, 0x10003ff07, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(3, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(4, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(5, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a2, tdat
  vle16.v v2, (a2)

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v1, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v3, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 8
  vsetvli t1, t0, e16,m1,tu,ma
  vmsbf.m v1, v2

  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a1, res
  vse16.v v1, (a1)


  TEST_CASE(6, t0, 0x10003ff07, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(7, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(8, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(9, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a2, tdat
  vle16.v v2, (a2)

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v1, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v3, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 15
  vsetvli t1, t0, e16,m1,ta,ma
  vmsbf.m v1, v2

  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a1, res
  vse16.v v1, (a1)


  TEST_CASE(10, t0, 0x100038007, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(11, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(12, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(13, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a2, tdat
  vle16.v v2, (a2)

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v1, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v3, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 15
  vsetvli t1, t0, e16,m1,tu,ma
  vmsbf.m v1, v2

  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a1, res
  vse16.v v1, (a1)


  TEST_CASE(14, t0, 0x100038007, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(15, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(16, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(17, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a2, tdat
  vle16.v v2, (a2)

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v1, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v3, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 16
  vsetvli t1, t0, e16,m1,ta,ma
  vmsbf.m v1, v2

  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a1, res
  vse16.v v1, (a1)


  TEST_CASE(18, t0, 0x100030007, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(19, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(20, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(21, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)


  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a2, tdat
  vle16.v v2, (a2)

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v1, (a2)
  la a2, tdat+8

  vsetvli t1, t0, e16,m1,ta,ma
  vle16.v v3, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 16
  vsetvli t1, t0, e16,m1,tu,ma
  vmsbf.m v1, v2

  li t0, -1
  vsetvli t1, t0, e16,m1,ta,ma
  la a1, res
  vse16.v v1, (a1)


  TEST_CASE(22, t0, 0x100030007, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(23, t0, 0x100070000, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(24, t0, 0xffffefffefffffff, ld t0, 0(a1); addi a1, a1, 8)
  TEST_CASE(25, t0, 0x1000000010000, ld t0, 0(a1); addi a1, a1, 8)




  TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

res:
  .zero 144

tdat:
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8
  .quad 0x100070000
  .quad 0xffffefffefffffff
  .quad 0x1000000010000
  .quad 0x10003fff8

mask:
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555

RVTEST_DATA_END
